"use client";
import {
  Box,
  Button,
  ColorModeScript,
  Container,
  Flex,
  FormControl,
  HStack,
  Heading,
  Select,
  Spinner,
  Text,
  Textarea,
  VStack,
  useColorMode,
} from "@chakra-ui/react";
import { type NextPage } from "next";
import Head from "next/head";
import { useCallback, useState } from "react";
import { BsSunFill, BsMoonFill } from "react-icons/bs";

import { api } from "~/utils/api";

const Home: NextPage = () => {
  const { colorMode, toggleColorMode } = useColorMode();
  const [query, setQuery] = useState("");
  const [input, setInput] = useState("");
  const [formality, setFormality] = useState("neutral");
  const [decoration, setDecoration] = useState("minimal");
  const { data: answer, isLoading: answerLoading } =
    api.openAI.getChatCompletion.useQuery({
      query: query,
      formality: formality,
      decoration: decoration,
    });

  const getAnswerComponent = useCallback(() => {
    if (answerLoading) return <Spinner />;
    if (!answer) return <Text>Something went wrong. Try again.</Text>;
    return (
      <Box>
        {answer.choices[0]?.message?.content.split("\n").map((line, i) => (
          <Text key={i} py={2}>
            {line}
          </Text>
        ))}
      </Box>
    );
  }, [answer, answerLoading]);

  return (
    <>
      <Head>
        <title>Wordfix</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <ColorModeScript />
      <Box textAlign={"center"} p={5}>
        <Heading mx={"auto"} size={"2xl"}>
          Wordfix
        </Heading>
        <Text size={"xs"}>Correct grammar and decorate your writing.</Text>
        <Button
          onClick={toggleColorMode}
          variant={"ghost"}
          position={"absolute"}
          left={5}
          top={5}
        >
          {colorMode === "dark" ? (
            <BsSunFill size={22} />
          ) : (
            <BsMoonFill size={20} />
          )}
        </Button>
        <Container alignItems={"center"} py={3} h={"full"}>
          <form
            onSubmit={(e) => {
              e.preventDefault();
              setQuery(input);
            }}
          >
            <FormControl>
              <VStack
                justifyItems={"center"}
                alignItems={"center"}
                justify={"center"}
                spacing={5}
              >
                <HStack w={"full"} spacing={5}>
                  <Select
                    onChange={(e) => setFormality(e.target.value)}
                    required
                    defaultValue={formality}
                  >
                    <option value="informal">Informal</option>
                    <option value="neutral">Neutral</option>
                    <option value="formal">Formal</option>
                  </Select>
                  <Select
                    onChange={(e) => setDecoration(e.target.value)}
                    required
                    defaultValue={decoration}
                  >
                    <option value="none">Don&#39;t decorate</option>
                    <option value="minimal">Minimal Decoration</option>
                    <option value="maximum">Maximum Decoration</option>
                  </Select>
                </HStack>
                <Textarea
                  placeholder="Enter text..."
                  h={64}
                  overflow={"visible"}
                  variant={"filled"}
                  resize={"none"}
                  value={input}
                  onChange={(e) => {
                    setInput(e.target.value);
                    if (e.target.value === "") setQuery("");
                  }}
                  required
                />
                <Button type="submit" variant={"solid"} hidden={!input}>
                  Submit
                </Button>
                <Box textAlign={"left"}>{getAnswerComponent()}</Box>
              </VStack>
            </FormControl>
          </form>
        </Container>
      </Box>
    </>
  );
};

export default Home;
